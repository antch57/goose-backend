// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Mutation struct {
}

type Performance struct {
	ID              string             `json:"id"`
	Band            *Band              `json:"band"`
	Venue           *Venue             `json:"venue"`
	PerformanceDate time.Time          `json:"performanceDate"`
	Duration        time.Duration      `json:"duration"`
	Songs           []*PerformanceSong `json:"songs"`
}

type PerformanceInput struct {
	BandID           string                  `json:"bandId"`
	Venue            string                  `json:"venue"`
	PerformanceDate  time.Time               `json:"performanceDate"`
	Duration         *time.Duration          `json:"duration,omitempty"`
	PerformanceSongs []*PerformanceSongInput `json:"performanceSongs,omitempty"`
}

type PerformanceSong struct {
	ID          string        `json:"id"`
	Song        *Song         `json:"song"`
	Duration    time.Duration `json:"duration"`
	Performance *Performance  `json:"performance"`
	IsCover     bool          `json:"isCover"`
	Notes       *string       `json:"notes,omitempty"`
}

type PerformanceSongInput struct {
	SongID        string        `json:"songId"`
	Duration      time.Duration `json:"duration"`
	PerformanceID string        `json:"performanceId"`
	Notes         *string       `json:"notes,omitempty"`
	IsCover       bool          `json:"isCover"`
}

type Query struct {
}

type Song struct {
	ID    string `json:"id"`
	Title string `json:"title"`
	Band  *Band  `json:"band,omitempty"`
}

type SongInput struct {
	Title  string  `json:"title"`
	BandID *string `json:"bandId,omitempty"`
}

type Venue struct {
	ID           string         `json:"id"`
	Name         string         `json:"name"`
	Location     *string        `json:"location,omitempty"`
	Performances []*Performance `json:"performances,omitempty"`
}

type VenueInput struct {
	Name     string `json:"name"`
	Location string `json:"location"`
}

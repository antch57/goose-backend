type Bands {
  bands: [Band!]
}

type Band {
  id: ID!
  name: String!
  genre: String!
  albums: [Album!]
  year: Int!
}

type Album {
  id: ID!
  title: String!
  releaseDate: String!
  songs: [Song!]!
}

type Song {
  id: ID!
  title: String!
  duration: String!
  album: Album
}

input AlbumInput {
  title: String!
  releaseDate: String!
  songs: [SongInput!]!
}

input SongInput {
  title: String!
  duration: String!
}

type Query {
  bands: [Band!]
  band(id: ID!): Band
  album(id: ID!): Album
  song(id: ID!): Song
}

type Mutation {
  createBand(name: String!, genre: String!, year: Int!, albums: [AlbumInput!]): Band!
  createAlbum(bandId: ID!, title: String!, releaseDate: String!): Album!
  createSong(albumId: ID!, title: String!, duration: String!): Song!
}
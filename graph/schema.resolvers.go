package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"
	"fmt"

	"github.com/antch57/goose/graph/model"
	"github.com/antch57/goose/internal/bands"
)

// CreateBand is the resolver for the createBand field.
func (r *mutationResolver) CreateBand(ctx context.Context, name string, genre string, year int, albums []*model.AlbumInput, description *string) (*model.Band, error) {
	band, err := bands.CreateBand(name, genre, year, albums, description)
	if err != nil {
		return nil, err
	}
	return &band, nil
}

// CreateAlbum is the resolver for the createAlbum field.
func (r *mutationResolver) CreateAlbum(ctx context.Context, bandID string, title string, releaseDate string) (*model.Album, error) {
	panic(fmt.Errorf("not implemented: CreateAlbum - createAlbum"))
}

// CreateSong is the resolver for the createSong field.
func (r *mutationResolver) CreateSong(ctx context.Context, albumID string, title string, duration int) (*model.Song, error) {
	panic(fmt.Errorf("not implemented: CreateSong - createSong"))
}

// Bands is the resolver for the bands field.
func (r *queryResolver) Bands(ctx context.Context) ([]*model.Band, error) {
	// panic(fmt.Errorf("not implemented: Bands - bands"))
	bands, err := bands.GetBands()
	if err != nil {
		return nil, err
	}
	return bands, nil
}

// Band is the resolver for the band field.
func (r *queryResolver) Band(ctx context.Context, id string) (*model.Band, error) {
	band, err := bands.GetBand(id)
	if err != nil {
		return nil, err
	}
	return band, nil
}

// Album is the resolver for the album field.
func (r *queryResolver) Album(ctx context.Context, id string) (*model.Album, error) {
	panic(fmt.Errorf("not implemented: Album - album"))
}

// Song is the resolver for the song field.
func (r *queryResolver) Song(ctx context.Context, id string) (*model.Song, error) {
	panic(fmt.Errorf("not implemented: Song - song"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/antch57/jam-statz/graph/model"
)

// Band is the resolver for the band field.
func (r *performanceResolver) Band(ctx context.Context, obj *model.Performance) (*model.Band, error) {
	res, err := r.PerformanceRepo.GetBand(obj.BandID)
	if err != nil {
		return nil, err
	}

	return res, nil
}

// Venue is the resolver for the venue field.
func (r *performanceResolver) Venue(ctx context.Context, obj *model.Performance) (*model.Venue, error) {
	res, err := r.PerformanceRepo.GetVenue(obj.VenueID)
	if err != nil {
		return nil, err
	}

	return res, nil
}

// Songs is the resolver for the songs field.
func (r *performanceResolver) Songs(ctx context.Context, obj *model.Performance) ([]*model.PerformanceSong, error) {
	res, err := r.PerformanceRepo.GetPerformanceSongs(obj.ID)
	if err != nil {
		return nil, err
	}

	return res, nil
}

// Song is the resolver for the song field.
func (r *performanceSongResolver) Song(ctx context.Context, obj *model.PerformanceSong) (*model.Song, error) {
	res, err := r.PerformanceRepo.GetSong(obj.SongID)
	if err != nil {
		return nil, err
	}

	return res, nil
}

// Performance is the resolver for the performance field.
func (r *performanceSongResolver) Performance(ctx context.Context, obj *model.PerformanceSong) (*model.Performance, error) {
	res, err := r.PerformanceRepo.GetPerformance(obj.PerformanceID)
	if err != nil {
		return nil, err
	}

	return res, nil
}

// Performance returns PerformanceResolver implementation.
func (r *Resolver) Performance() PerformanceResolver { return &performanceResolver{r} }

// PerformanceSong returns PerformanceSongResolver implementation.
func (r *Resolver) PerformanceSong() PerformanceSongResolver { return &performanceSongResolver{r} }

type performanceResolver struct{ *Resolver }
type performanceSongResolver struct{ *Resolver }
